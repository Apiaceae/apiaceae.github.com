<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ASP.NET | 虎克的博客]]></title>
  <link href="http://Apiaceae.github.io/blog/categories/asp-dot-net/atom.xml" rel="self"/>
  <link href="http://Apiaceae.github.io/"/>
  <updated>2013-09-27T01:10:07+08:00</updated>
  <id>http://Apiaceae.github.io/</id>
  <author>
    <name><![CDATA[Hooker]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Visual Studio 2010快捷工具配置]]></title>
    <link href="http://Apiaceae.github.io/blog/2012/01/24/visual-studio-productivit-tools/"/>
    <updated>2012-01-24T14:20:00+08:00</updated>
    <id>http://Apiaceae.github.io/blog/2012/01/24/visual-studio-productivit-tools</id>
    <content type="html"><![CDATA[<h4>Visual Studio 2010+Code Rush + PowerCommand + Power Tools三種套件同時存在的微調修改</h4>

<p><a href="http://demo.tc/SeriesArticleList/Visual%20Studio%20%E7%B2%BE%E9%81%B8%E6%93%B4%E5%85%85%E5%A5%97%E4%BB%B6">系列文章</a></p>

<ul>
<li><a href="http://www.facebook.com/sharer.php?t=[Visual%20Studio%202010]%20Code%20Rush%20+%20PowerCommand%20+%20Power%20Tools%20%E4%B8%89%E7%A8%AE%E5%A5%97%E4%BB%B6%E5%90%8C%E6%99%82%E5%AD%98%E5%9C%A8%E7%9A%84%E5%BE%AE%E8%AA%BF%E4%BF%AE%E6%94%B9-demo%E5%B0%8F%E9%8B%AA&amp;u=http://demo.tc/Post/630">將本文推到Facebook</a></li>
<li><a href="http://twitter.com/?status=http://demo.tc/Post/630%20[Visual%20Studio%202010]%20Code%20Rush%20+%20PowerCommand%20+%20Power%20Tools%20%E4%B8%89%E7%A8%AE%E5%A5%97%E4%BB%B6%E5%90%8C%E6%99%82%E5%AD%98%E5%9C%A8%E7%9A%84%E5%BE%AE%E8%AA%BF%E4%BF%AE%E6%94%B9+-+demo%E5%B0%8F%E9%8B%AA">將本文推到Twitter</a></li>
<li><a href="http://plurk.com/?status=http://demo.tc/Post/630+([Visual%20Studio%202010]%20Code%20Rush%20+%20PowerCommand%20+%20Power%20Tools%20%E4%B8%89%E7%A8%AE%E5%A5%97%E4%BB%B6%E5%90%8C%E6%99%82%E5%AD%98%E5%9C%A8%E7%9A%84%E5%BE%AE%E8%AA%BF%E4%BF%AE%E6%94%B9+-+demo%E5%B0%8F%E9%8B%AA">將本文推到Plurk</a>&amp;qualifier=shares)</li>
<li><a href="http://pdfmyurl.com/?url=http://demo.tc/Post/630">下載本文PDF</a></li>
</ul>


<p>demo 的 Visual Studio 一直以來都會安裝 Code Rush 和 PowerCommand
，一直也都合作愉快，但最近看了ScottGu&rsquo;s 的 Power Tool
介紹文，看到了一個相當棒的功能 Solution Navigator 讓我決定也要安裝 Power
Tools ，就因為這樣我的 Visual Studio 擁有了Code Rush + PowerCommand +
Power Tools
三套套件，部份功能重複性還滿高的，所以就稍微作了一下調整，記錄下來以免以後忘記。</p>

<ul>
<li>最後更新：2011/7/6 上午 09:12:10</li>
</ul>


<p><img src="http://demo.tc/images/msn/demosay.gif" title="demo廢言" alt="demo廢言" />先說明因為
demo 主要功能是 Code Rush > PowerCommand > Power
Tools，因此有重複的功能會優先關掉 Power Tool 的，不過考量到 Code Rush
免費版到底有什麼功能我不知道，因此衝突的部份都會寫出來，有需要的朋友再自行調配使用。</p>

<p><img src="http://lh3.ggpht.com/_PgurvCEASJs/TFz8N-4jlFI/AAAAAAAAGjA/Ocr7cVFvqxo/s800/CPPTools01.gif" alt="" />Code
Rush
（<a href="http://visualstudiogallery.msdn.microsoft.com/zh-TW/F9CDA5D8-10AF-4CC6-9D17-207222A3FD13">官網</a>）預設所有功能都是他，不調整</p>

<hr />

<p><img src="http://lh5.ggpht.com/_PgurvCEASJs/TFz8NyaBirI/AAAAAAAAGjE/nyQLSYxbzps/s800/CPPTools02.gif" alt="" />PowerCommand
（<a href="http://visualstudiogallery.msdn.microsoft.com/en-us/e5f41ad9-4edc-4912-bca3-91147db95b99">官網</a>）調整如下：</p>

<p><img src="http://lh5.ggpht.com/_PgurvCEASJs/TFz8OK_ov6I/AAAAAAAAGjM/swibUMiJ_3w/s800/CPPTools04.gif" alt="" /></p>

<ol>
<li>用到機率太小所以關閉。</li>
<li>內建就有了所以關閉。</li>
<li>和 Power Tools 重複，所以關閉。</li>
</ol>


<p><img src="http://lh5.ggpht.com/_PgurvCEASJs/TFz8N2d1vOI/AAAAAAAAGjI/tE9LSJdYbIU/s800/CPPTools03.gif" alt="" />Power
Tools
（<a href="http://visualstudiogallery.msdn.microsoft.com/en-us/d0d33361-18e2-46c0-8ff2-4adea1e34fef">官網</a>）調整如下：</p>

<p><img src="http://lh4.ggpht.com/_PgurvCEASJs/TFz8OLAP1QI/AAAAAAAAGjQ/D629sgQK1Zg/s800/CPPTools05.gif" alt="" /></p>

<ol>
<li>因不一定團隊成員都有安裝，所以意義不大，因此關閉。</li>
<li>與 Code Rush 衝突，因此關閉。</li>
<li>與 Code Rush 衝突，因此關閉。</li>
<li>因不一定團隊成員都有安裝，所以意義不大，因此關閉。</li>
<li>與 Code Rush 衝突，因此關閉。</li>
<li>單純因為自己用不到所以關閉&hellip;..</li>
<li>單純因為自己用不到所以關閉&hellip;..</li>
<li>單純因為自己用不到所以關閉&hellip;..</li>
<li>CTRL﹢X 更好用所以關閉。</li>
</ol>


<hr />

<p>基於以上的調整後，一些重複的功能就不會出現了，但這三個套件功能繁雜，demo
不可能一一介紹（除非我開三篇文）所以就請各位參考一下官方和其他網友的說明吧。</p>

<p><img src="http://demo.tc/images/msn/linkPage.gif" title="分隔線" alt="分隔線" /></p>

<ul>
<li><p>Code Rush</p>

<ul>
<li><a href="http://visualstudiogallery.msdn.microsoft.com/zh-TW/F9CDA5D8-10AF-4CC6-9D17-207222A3FD13">Visual Studio
模組下載介紹頁面</a></li>
<li><a href="http://www.dotblogs.com.tw/sam319/archive/2009/12/31/12747.aspx">強力推薦寫程式一定要用的外掛工具 &ndash; CodeRush
Xpress</a></li>
<li><a href="http://www.minitw.com/archives/633">開啟 CodeRush Xpress 10.1
的選單功能列</a></li>
</ul>
</li>
<li><p>PowerCommand</p>

<ul>
<li><a href="http://visualstudiogallery.msdn.microsoft.com/en-us/e5f41ad9-4edc-4912-bca3-91147db95b99">Visual Studio
模組下載介紹頁面</a></li>
<li><a href="http://weblogs.asp.net/scottgu/archive/2010/05/03/visual-studio-2010-extension-manager-and-the-new-vs-2010-powercommands-extension.aspx">Visual Studio 2010 Extension Manager (and the new VS 2010
PowerCommands
Extension)</a></li>
</ul>
</li>
<li><p>Poert Tools</p>

<ul>
<li><a href="http://visualstudiogallery.msdn.microsoft.com/en-us/d0d33361-18e2-46c0-8ff2-4adea1e34fef">Visual Studio
模組下載介紹頁面</a></li>
<li><a href="http://www.dotblogs.com.tw/larrynung/archive/2010/06/14/15862.aspx">[Visual Studio]Visual Studio 2010 Pro Power
Tools</a></li>
<li><a href="http://weblogs.asp.net/scottgu/archive/2010/08/04/some-nice-code-editor-features-provided-by-the-vs-2010-power-tool-extensions.aspx">Some nice code editor features provided by the VS 2010 Power
Tool
Extensions</a></li>
<li><a href="http://weblogs.asp.net/scottgu/archive/2010/07/19/vs-2010-productivity-power-tools-update-with-some-cool-new-features.aspx">VS 2010 Productivity Power Tools Update (with some cool new
features)</a></li>
</ul>
</li>
</ul>


<p><a href="http://demo.tc/Tag/Visual%20Studio%20%E6%93%B4%E5%85%85%E5%A5%97%E4%BB%B6">Visual Studio
擴充套件</a></p>

<p>原文地址：<a href="http://demo.tc/Post/630">http://demo.tc/Post/630</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ASP.NET MVC REST API 应用实例]]></title>
    <link href="http://Apiaceae.github.io/blog/2010/04/25/aspnet-mvc-rest-api-example/"/>
    <updated>2010-04-25T16:20:00+08:00</updated>
    <id>http://Apiaceae.github.io/blog/2010/04/25/aspnet-mvc-rest-api-example</id>
    <content type="html"><![CDATA[<p><strong>需要解决的问题</strong></p>

<hr />

<p><strong>1：创建更为简洁的/Product/Details/1 URL</strong></p>

<p>**** </p>

<p>+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+
| <strong>Valid route definitions</strong>          | <strong><strong>                                 |
|                                      |                                      |
|                                      | </strong>Examples of matching URL</strong>         |
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+
| {controller}/{action}/{id}           | /Products/Details/1                  |
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+
| {controller}/{action}/{id}           | /Products/1                          |
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+
| {controller}/{action}/{id}.{Format}  | /Products/Show/1.xml                 |
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+</p>

<p> </p>

<p>“/Products/Details/1”是我们在MVC开发中默认浏览对象Details方法的路由，需要实现的是更为简洁的url表示，如“/Products/1”，返回和“/Products/Details/1“同样的结果。这个处理比较简单，仅仅需要在Global.asax文件中添加一条新的路由规则，不过一定记得是添加在默认路由的前面。</p>

<p><a href="http://blog.cnpc.ac.cn/Blogs/images/WindowsLiveWriter/ASP.NETMVCRESTAPI/77781FD4/20100425_233011.png"><img src="/images/WindowsLiveWriter/ASP.NETMVCRESTAPI/56873DDE/20100425_233011_thumb.png" title="2010-04-25_233011" alt="2010-04-25_233011" /></a></p>

<p> </p>

<p><strong>2：创建一个/Product/Show/1.xml的API</strong></p>

<p>要实现xml访问的API,需要先建立一个抽象类来处理返回结果的路由和xml结果的序列化，这里用到了MVC
Contrib的类库，可以去<a href="http://mvccontrib.codeplex.com/documentation">MVC Contrib Code
Plex</a>下载添加引用。见下图代码的return
new XMLResult</p>

<p>代码如下：</p>

<p><a href="http://blog.cnpc.ac.cn/Blogs/images/WindowsLiveWriter/ASP.NETMVCRESTAPI/383F1799/20100425_233740.png"><img src="/images/WindowsLiveWriter/ASP.NETMVCRESTAPI/3E1C4BE3/20100425_233740_thumb.png" title="2010-04-25_233740" alt="2010-04-25_233740" /></a></p>

<p>最后需要在相应的Action中添加对应的返回类型，这里是Show，见下图</p>

<p><a href="http://blog.cnpc.ac.cn/Blogs/images/WindowsLiveWriter/ASP.NETMVCRESTAPI/5C1F7B39/20100425_234102.png"><img src="/images/WindowsLiveWriter/ASP.NETMVCRESTAPI/57A8FA72/20100425_234102_thumb.png" title="2010-04-25_234102" alt="2010-04-25_234102" /></a></p>

<p>实际效果如下：</p>

<p><a href="http://blog.cnpc.ac.cn/Blogs/images/WindowsLiveWriter/ASP.NETMVCRESTAPI/2DCB16EE/20100425_234456.png"><img src="/images/WindowsLiveWriter/ASP.NETMVCRESTAPI/3ED1D582/20100425_234456_thumb.png" title="2010-04-25_234456" alt="2010-04-25_234456" /></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ASP.NET应用程序客户端执行的优化小技巧]]></title>
    <link href="http://Apiaceae.github.io/blog/2009/03/17/aspnet/"/>
    <updated>2009-03-17T00:00:00+08:00</updated>
    <id>http://Apiaceae.github.io/blog/2009/03/17/aspnet</id>
    <content type="html"><![CDATA[<p><strong>1. 使用较少的HTTP请求</strong></p>

<p><strong>2. 合并文件：尽量将所有的脚本文件或者是CSS样式表文件合并到一个文件</strong></p>

<p><strong>3. 将网页背景图片尽量合并为一张图片文件</strong></p>

<p><strong>4. 使用CSS的'背景图'片和'图片位置属性'（CSS background-image and background-position）进行设置</strong></p>

<p><strong>5. 文件的大小: 减少文件数量, 对文件进行压缩, 将CSS文件放置在文件顶部，JS文件放在底部</strong></p>

<p>详细的检查网页效率和方法参考: <a href="http://www.css8.cn/chat/dispbbs.asp?boardid=26&amp;Id=493">css聊吧</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ObjectDataSource控件的分页、排序和筛选]]></title>
    <link href="http://Apiaceae.github.io/blog/2009/03/16/objectdatasource/"/>
    <updated>2009-03-16T00:00:00+08:00</updated>
    <id>http://Apiaceae.github.io/blog/2009/03/16/objectdatasource</id>
    <content type="html"><![CDATA[<p>ObjectDataSource控件提供了两种方法对绑定到控件(比如GridView)的数据进行分页和排序：</p>

<p>通过用户界面进行分页，优点是容易设置，缺点是当数据量大时执行效率较低；
实现方法：</p>

<p>对GridView控件使用正确的数据源，比如：DataSet, Collection, DataTable或者DataView，但不能使用DataReader
在页面设置GridView控件分分页属性为True。AllowPaging=&ldquo;True&rdquo;</p>

<p>通过设置ObjectDataSource的分页，优点是数据量大时执行效率较高，特别是如果配合Caching能极大的提高以数据驱动为主的网络应用程序的效率。
ObjectDataSource数据源的分页可以在类Class, 存储过程, LINQ to SQL查询中实现，下面以LINQ to SQL,Northwind数据库的Product表为例子来说明用法：</p>

<p>实例网站的文档结构如下图：</p>

<h6>1、新建网页，添加LINQ to SQL Class，命名为Products，在Server Exploer中拖拽Northwind数据库的Product表到设计界面。</h6>

<p>！<a href="/images/2009/3/04.png">图1</a></p>

<h6>2、添加一个新类Class命名为roductsLINQPaging</h6>

<p>！<a href="/images/2009/3/05.png">图2</a>
！<a href="/images/2009/3/06.png">图3</a>
！<a href="/images/2009/3/06.png">图3</a></p>

<h6>3、类中实现的方法如下：</h6>

<p>&lsquo;&rsquo;&lsquo;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Data.Linq;
using System.Web;</p>

<p>/// <summary>
/// Summary description for ProductsLINQPaging
/// </summary>
public class ProductsLINQPaging</p>

<pre><code>{
  public ProductsLINQPaging()
    {
        //
        // TODO: Add constructor logic here
        //
</code></pre>

<p>&lsquo;&rsquo;'</p>
]]></content>
  </entry>
  
</feed>
